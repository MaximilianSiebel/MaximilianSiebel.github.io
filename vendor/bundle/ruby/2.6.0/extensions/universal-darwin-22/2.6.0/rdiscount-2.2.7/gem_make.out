current directory: /Users/maximiliansiebel/hydejack/vendor/bundle/ruby/2.6.0/gems/rdiscount-2.2.7/ext
/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby -I /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0 -r ./siteconf20230116-14412-8wdbq5.rb extconf.rb
checking for random()... yes
checking for srandom()... yes
checking for rand()... yes
checking for srand()... yes
checking size of unsigned long... 8
checking size of unsigned int... 4
checking size of unsigned int... 4
checking size of unsigned short... 2
creating Makefile

current directory: /Users/maximiliansiebel/hydejack/vendor/bundle/ruby/2.6.0/gems/rdiscount-2.2.7/ext
make "DESTDIR=" clean

current directory: /Users/maximiliansiebel/hydejack/vendor/bundle/ruby/2.6.0/gems/rdiscount-2.2.7/ext
make "DESTDIR="
compiling Csio.c
compiling amalloc.c
amalloc.c:40:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if ( ret = calloc(count + sizeof(struct alist) + sizeof(int), size) ) {
         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
amalloc.c:40:14: note: place parentheses around the assignment to silence this warning
    if ( ret = calloc(count + sizeof(struct alist) + sizeof(int), size) ) {
             ^
         (                                                             )
amalloc.c:40:14: note: use '==' to turn this assignment into an equality comparison
    if ( ret = calloc(count + sizeof(struct alist) + sizeof(int), size) ) {
             ^
             ==
1 warning generated.
compiling basename.c
compiling css.c
compiling docheader.c
compiling dumptree.c
compiling emmatch.c
emmatch.c:113:20: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    case 2: if ( e = empair(f,first,last,match=2) )
                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
emmatch.c:113:20: note: place parentheses around the assignment to silence this warning
    case 2: if ( e = empair(f,first,last,match=2) )
                   ^
                 (                               )
emmatch.c:113:20: note: use '==' to turn this assignment into an equality comparison
    case 2: if ( e = empair(f,first,last,match=2) )
                   ^
                   ==
1 warning generated.
compiling flags.c
flags.c:57:11: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( not = (*name == '!') ) {
             ~~~~^~~~~~~~~~~~~~~~
flags.c:57:11: note: place parentheses around the assignment to silence this warning
        if ( not = (*name == '!') ) {
                 ^
             (                   )
flags.c:57:11: note: use '==' to turn this assignment into an equality comparison
        if ( not = (*name == '!') ) {
                 ^
                 ==
1 warning generated.
compiling generate.c
generate.c:693:19: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    else if ( tag = pseudo(ref->link) ) {
              ~~~~^~~~~~~~~~~~~~~~~~~
generate.c:693:19: note: place parentheses around the assignment to silence this warning
    else if ( tag = pseudo(ref->link) ) {
                  ^
              (                      )
generate.c:693:19: note: use '==' to turn this assignment into an equality comparison
    else if ( tag = pseudo(ref->link) ) {
                  ^
                  ==
generate.c:785:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
                if ( ref = bsearch(&key, T(f->footnotes->note),
                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:785:12: note: place parentheses around the assignment to silence this warning
                if ( ref = bsearch(&key, T(f->footnotes->note),
                         ^
                     (
generate.c:785:12: note: use '==' to turn this assignment into an equality comparison
                if ( ref = bsearch(&key, T(f->footnotes->note),
                         ^
                         ==
2 warnings generated.
compiling gethopt.c
compiling github_flavoured.c
compiling h1title.c
compiling html5.c
compiling markdown.c
markdown.c:266:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
           if ( end = strstr(T(t->text), "-->") ) {
                ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:266:14: note: place parentheses around the assignment to silence this warning
           if ( end = strstr(T(t->text), "-->") ) {
                    ^
                (                              )
markdown.c:266:14: note: use '==' to turn this assignment into an equality comparison
           if ( end = strstr(T(t->text), "-->") ) {
                    ^
                    ==
markdown.c:317:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
                if ( closing = (c == '/') ) c = flogetc(&f);
                     ~~~~~~~~^~~~~~~~~~~~
markdown.c:317:16: note: place parentheses around the assignment to silence this warning
                if ( closing = (c == '/') ) c = flogetc(&f);
                             ^
                     (                   )
markdown.c:317:16: note: use '==' to turn this assignment into an equality comparison
                if ( closing = (c == '/') ) c = flogetc(&f);
                             ^
                             ==
markdown.c:491:8: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( x=is_extra_dt(t->next, clip, flags) )
             ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:491:8: note: place parentheses around the assignment to silence this warning
        if ( x=is_extra_dt(t->next, clip, flags) )
              ^
             (                                  )
markdown.c:491:8: note: use '==' to turn this assignment into an equality comparison
        if ( x=is_extra_dt(t->next, clip, flags) )
              ^
              ==
markdown.c:504:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if ( ret = is_discount_dt(t,clip,flags) )
         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:504:14: note: place parentheses around the assignment to silence this warning
    if ( ret = is_discount_dt(t,clip,flags) )
             ^
         (                                 )
markdown.c:504:14: note: use '==' to turn this assignment into an equality comparison
    if ( ret = is_discount_dt(t,clip,flags) )
             ^
             ==
markdown.c:832:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( p->ident = malloc(4+strlen(prefix)+S(q->text)) )
             ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:832:16: note: place parentheses around the assignment to silence this warning
        if ( p->ident = malloc(4+strlen(prefix)+S(q->text)) )
                      ^
             (                                             )
markdown.c:832:16: note: use '==' to turn this assignment into an equality comparison
        if ( p->ident = malloc(4+strlen(prefix)+S(q->text)) )
                      ^
                      ==
markdown.c:944:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( para = (text != q->next) )
             ~~~~~^~~~~~~~~~~~~~~~~~~
markdown.c:944:12: note: place parentheses around the assignment to silence this warning
        if ( para = (text != q->next) )
                  ^
             (                       )
markdown.c:944:12: note: use '==' to turn this assignment into an equality comparison
        if ( para = (text != q->next) )
                  ^
                  ==
markdown.c:967:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( para = (q != text) ) {
             ~~~~~^~~~~~~~~~~~~
markdown.c:967:12: note: place parentheses around the assignment to silence this warning
        if ( para = (q != text) ) {
                  ^
             (                 )
markdown.c:967:12: note: use '==' to turn this assignment into an equality comparison
        if ( para = (q != text) ) {
                  ^
                  ==
markdown.c:1007:12: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( para = (q != text) ) {
             ~~~~~^~~~~~~~~~~~~
markdown.c:1007:12: note: place parentheses around the assignment to silence this warning
        if ( para = (q != text) ) {
                  ^
             (                 )
markdown.c:1007:12: note: use '==' to turn this assignment into an equality comparison
        if ( para = (q != text) ) {
                  ^
                  ==
markdown.c:1347:23: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        else if ( list_class = islist(ptr, &indent, f->flags, &list_type) ) {
                  ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
markdown.c:1347:23: note: place parentheses around the assignment to silence this warning
        else if ( list_class = islist(ptr, &indent, f->flags, &list_type) ) {
                             ^
                  (                                                      )
markdown.c:1347:23: note: use '==' to turn this assignment into an equality comparison
        else if ( list_class = islist(ptr, &indent, f->flags, &list_type) ) {
                             ^
                             ==
9 warnings generated.
compiling mkdio.c
mkdio.c:28:16: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( ret->ctx = calloc(sizeof(MMIOT), 1) ) {
             ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
mkdio.c:28:16: note: place parentheses around the assignment to silence this warning
        if ( ret->ctx = calloc(sizeof(MMIOT), 1) ) {
                      ^
             (                                  )
mkdio.c:28:16: note: use '==' to turn this assignment into an equality comparison
        if ( ret->ctx = calloc(sizeof(MMIOT), 1) ) {
                      ^
                      ==
mkdio.c:332:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if ( len = S(f.out) ) {
         ~~~~^~~~~~~~~~
mkdio.c:332:14: note: place parentheses around the assignment to silence this warning
    if ( len = S(f.out) ) {
             ^
         (             )
mkdio.c:332:14: note: use '==' to turn this assignment into an equality comparison
    if ( len = S(f.out) ) {
             ^
             ==
2 warnings generated.
compiling mktags.c
compiling notspecial.c
compiling pgm_options.c
compiling rdiscount.c
rdiscount.c:53:31: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if ( rb_funcall(ruby_obj, rb_intern("smart"), 0) != Qtrue ) {
                              ^~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:53:31: note: '{' token is here
    if ( rb_funcall(ruby_obj, rb_intern("smart"), 0) != Qtrue ) {
                              ^~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:53:31: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if ( rb_funcall(ruby_obj, rb_intern("smart"), 0) != Qtrue ) {
                              ^~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:53:31: note: ')' token is here
    if ( rb_funcall(ruby_obj, rb_intern("smart"), 0) != Qtrue ) {
                              ^~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:59:35: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if ( rb_funcall(ruby_obj, rb_intern(entry->accessor_name), 0) == Qtrue ) {
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:59:35: note: '{' token is here
        if ( rb_funcall(ruby_obj, rb_intern(entry->accessor_name), 0) == Qtrue ) {
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:59:35: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if ( rb_funcall(ruby_obj, rb_intern(entry->accessor_name), 0) == Qtrue ) {
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:59:35: note: ')' token is here
        if ( rb_funcall(ruby_obj, rb_intern(entry->accessor_name), 0) == Qtrue ) {
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:74:35: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:74:35: note: '{' token is here
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:74:35: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:74:35: note: ')' token is here
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:107:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if ( rb_respond_to(text, rb_intern("encoding")) ) {
                             ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
rdiscount.c:107:30: note: '{' token is here
    if ( rb_respond_to(text, rb_intern("encoding")) ) {
                             ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
rdiscount.c:107:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if ( rb_respond_to(text, rb_intern("encoding")) ) {
                             ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
rdiscount.c:107:30: note: ')' token is here
    if ( rb_respond_to(text, rb_intern("encoding")) ) {
                             ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
rdiscount.c:108:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        encoding = rb_funcall(text, rb_intern("encoding"), 0);
                                    ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:108:37: note: '{' token is here
        encoding = rb_funcall(text, rb_intern("encoding"), 0);
                                    ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:108:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        encoding = rb_funcall(text, rb_intern("encoding"), 0);
                                    ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:108:37: note: ')' token is here
        encoding = rb_funcall(text, rb_intern("encoding"), 0);
                                    ^~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:109:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(buf, rb_intern("force_encoding"), 1, encoding);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:109:25: note: '{' token is here
        rb_funcall(buf, rb_intern("force_encoding"), 1, encoding);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:109:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(buf, rb_intern("force_encoding"), 1, encoding);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:109:25: note: ')' token is here
        rb_funcall(buf, rb_intern("force_encoding"), 1, encoding);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:124:35: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:124:35: note: '{' token is here
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:124:35: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
rdiscount.c:124:35: note: ')' token is here
    VALUE text = rb_funcall(self, rb_intern("text"), 0);
                                  ^~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
14 warnings generated.
compiling resource.c
compiling setup.c
compiling tags.c
compiling toc.c
compiling version.c
compiling xml.c
xml.c:49:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( entity = mkd_xmlchar(c) )
             ~~~~~~~^~~~~~~~~~~~~~~~
xml.c:49:14: note: place parentheses around the assignment to silence this warning
        if ( entity = mkd_xmlchar(c) )
                    ^
             (                      )
xml.c:49:14: note: use '==' to turn this assignment into an equality comparison
        if ( entity = mkd_xmlchar(c) )
                    ^
                    ==
xml.c:72:14: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( entity = mkd_xmlchar(c) )
             ~~~~~~~^~~~~~~~~~~~~~~~
xml.c:72:14: note: place parentheses around the assignment to silence this warning
        if ( entity = mkd_xmlchar(c) )
                    ^
             (                      )
xml.c:72:14: note: use '==' to turn this assignment into an equality comparison
        if ( entity = mkd_xmlchar(c) )
                    ^
                    ==
2 warnings generated.
compiling xmlpage.c
xmlpage.c:28:13: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
        if ( title = mkd_doc_title(p) ) {
             ~~~~~~^~~~~~~~~~~~~~~~~~
xmlpage.c:28:13: note: place parentheses around the assignment to silence this warning
        if ( title = mkd_doc_title(p) ) {
                   ^
             (                       )
xmlpage.c:28:13: note: use '==' to turn this assignment into an equality comparison
        if ( title = mkd_doc_title(p) ) {
                   ^
                   ==
1 warning generated.
linking shared-object rdiscount.bundle
ld: warning: directory not found for option '-L/AppleInternal/Library/BuildRoots/aaefcfd1-5c95-11ed-8734-2e32217d8374/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.Internal.sdk/usr/local/lib'

current directory: /Users/maximiliansiebel/hydejack/vendor/bundle/ruby/2.6.0/gems/rdiscount-2.2.7/ext
make "DESTDIR=" install
/usr/bin/install -c -m 0755 rdiscount.bundle ./.gem.20230116-14412-xpqrqj
